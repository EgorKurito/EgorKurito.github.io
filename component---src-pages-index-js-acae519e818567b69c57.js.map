{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","subtitle","github","vk","facebook","linkedin","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","align","class","href","_2918201153","IndexPage","layout","seo","keywords","landing_bio","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf","Content","NavLink","Link","HomeLink","SiteHeader","Header","to","Footer","Layout","react_default","Fragment","header","layout_Content","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-acae519e818567b69c57.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 0;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n            github\n            vk\n            linkedin\n            facebook\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <Description>{data.site.siteMetadata.subtitle}</Description>\n            <div align=\"center\" class=\"socialbtns\">\n              <ul>\n                <li><a href={data.site.siteMetadata.facebook} class=\"fa fa-lg fa-facebook\" target=\"_blank\"></a></li>\n                <li><a href={data.site.siteMetadata.vk} class=\"fa fa-lg fa-vk\" target=\"_blank\"></a></li>\n                <li><a href={data.site.siteMetadata.github} class=\"fa fa-lg fa-github\" target=\"_blank\"></a></li>\n                <li><a href={data.site.siteMetadata.linkedin} class=\"fa fa-lg fa-linkedin\" target=\"_blank\"></a></li>\n              </ul>\n            </div>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\n\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string,\n  github: PropTypes.string,\n  vk: PropTypes.string,\n  facebook: PropTypes.string,\n  linkedin: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n  subtitle: ``,\n  github: ``,\n  vk: ``,\n  facebook: ``,\n  linkedin: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <NavLink to=\"/about\">About</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}\n            {` `}\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}