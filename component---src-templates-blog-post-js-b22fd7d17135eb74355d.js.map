{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","MarkedHeader","HeaderDate","MarkdownContent","__webpack_exports__","_ref","post","data","markdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","pageQuery","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","array","arrayOf","styled_base_browser_esm","NavLink","Link","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","to","Footer","Layout","gatsby_browser_entry","react_default","Fragment","header","layout_Content","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-post-js-b22fd7d17135eb74355d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n`\n\nconst HeaderDate = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n  font-size: 1.1rem;\n`\n\n// STYLE THE TAGS INSIDE THE MARKDOWN HERE\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n  }\n\n  a::after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 70%;\n    left: -0.1px;\n    right: -0.1px;\n    bottom: 0;\n    transition: top 0.1s ease-in-out;\n    background-color: rgba(255, 250, 150, 0.8);\n  }\n\n  a:hover::after {\n    top: 0;\n  }\n`\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Content>\n        <MarkedHeader>{post.frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {post.frontmatter.date}\n        </HeaderDate>\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt(pruneLength: 160)\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <NavLink to=\"/about\">About</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}\n            {` `}\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}